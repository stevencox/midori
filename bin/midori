#!/bin/bash

################################################################
##
## Midori compiles a domain specific language to target 
## the Containernet software defined networking simulation stack.
##
##   This is the Bash command line interface (CLI) for Midori.
##   
##   author: steven cox
##   version: 0.1
##   usage:
##      
##     compile: 
##      
##       midori compile <program.midori>
##       ex: midori compile examples/net.midori
##       
################################################################
set -e

##
## Get our location and configure the path.
##
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
MIDORI_HOME=$( dirname $DIR )
export PYTHONPATH=${PYTHONPATH:-$MIDORI_HOME/src}

##
## Compile a Midori program.
##
compile () {
    python $MIDORI_HOME/src/midori/compiler.py --source $*
}

##
## Run a Midori program remotely.
##
run () {
    python $MIDORI_HOME/src/midori/client.py $*
}

##
## Run the Midori API.
##
api () {
    python $MIDORI_HOME/src/midori/api.py $*
}

##
## Serve in a fault tolerant setting
##
serve () {
    echo $*
    gunicorn --bind 0.0.0.0:8000 \
	     --worker-class uvicorn.workers.UvicornWorker \
	     --log-level=debug \
	     --pythonpath=./src midori.api:app \
	     --workers=$*
}

##
## Run the Midori worker.
##
worker () {
    echo $PYTHONPATH
    python $MIDORI_HOME/src/midori/worker.py $*
}

##
## Test Midori
##
test () {
    pytest --asyncio-mode=strict --capture=no $*
}

##
## Document
##
doc () {
    pdoc -d google --output $MIDORI_HOME/docs midori
}

##
## Load Midori
##
load () {
    for x in {0..25000}; do
	curl -X 'GET' \
	     'http://127.0.0.1:8000/network/result?network_id=98666727-4d3d-4827-97e4-b30826cae35d' \
	     -H 'accept: application/json'
	echo hi
    done
}

##
## Configure
##
## Tools for keeping Python pip dependencies orderly and minimal.
##
configure () {
    TEST_DEPS="pytest pytest-asyncio asgi_lifespan httpx pdoc"
    DEPS="fastapi jinja2 redis kafka-python docker lark argparse python-iptables PyYAML uvicorn gunicorn jsonpickle ${TEST_DEPS}"
    install () {
	python -m pip install --upgrade pip
	pip install --upgrade $DEPS
    }
    freeze () {
	pattern=$(echo $DEPS | sed -e "s, ,\|,g" -e "s,_,\.\*,g" )
	pip freeze | egrep "($pattern)" > $MIDORI_HOME/requirements.txt
    }
    clean () {
	pip freeze | xargs pip uninstall -y
    }
    $*
}

$*
