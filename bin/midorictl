#!/bin/bash

######################################################################
##
## Control CLI interface for Midori system.
##
## Defines interfaces for controlling services within a container.
## 
## Is also used during the creation of an image that adds 
## required infrastructure and tools to the base Containernet image.
##
######################################################################
#set -x
set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
MIDORI_HOME=$( dirname $DIR )

# Install all required components.
configure_midori() {
    $MIDORI_HOME/bin/configure start_node
}

# Pause until the ONOS service is accepting requests.
wait_for_onos() {
    cd /containernet
    until $(wget --quiet http://onos:8181/onos/ui); do
	sleep 10
	echo waiting for onos...
    done
}

# In lieu of systemd in the container, keep midori API and job queue worker
# running. Investigate using Python supervisor instead:
# http://supervisord.org/index.html
supervise() {
    export MIDORI_ENV=container
    while true; do
	if [ -z "$( pgrep -f 'python.*midori.*api.py' )" ]; then
	    $MIDORI_HOME/bin/configure start_api &
	fi
	if [ -z "$( pgrep -f 'python.*worker.*py' )" ]; then
	    $MIDORI_HOME/bin/configure start_worker &
	fi
	sleep 10;
    done;
}

# Set up the environment and supervise services.
# The entrypoint.sh script is from the Containernet base
# and is essential to providing required Mininet infrastructure.
start() {
    cd /containernet
    util/docker/entrypoint.sh &
    wait_for_onos
    supervise
}

$*


