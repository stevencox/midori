###########################################################
##
## Midori System
##
##   A network simulation SDK.
##
##   onos: software defined networking operating system.
##
##   containernet: network simulation system.
##
##   redis: message cache and data store.
##
##   redisinsight: redis gui.
##
##
###########################################################
version: '3.3'

services:

  # The control plane providing an openflow controller,
  # an REST API supporting devices, links, paths, intents, etc,
  # and GUI. We specify onos apps to launch on startup.
  onos:
    image: onosproject/onos:latest
    environment:
      - ONOS_APPS=drivers,openflow,proxyarp,gui2
    restart: always
    ports:
      - 8181:8181 # GUI
      - 6633:6633 # Openflow - Mininet interface
      - 6653:6653 # Openflow - Mininet interface
    container_name: onos

  # Midori, an API and compiler for Containernet. Containernet
  # is a Mininet fork which provides container based
  # network simulation via a Python API.
  midori:
    image: midori/midori:latest
    entrypoint: /midori/bin/midorictl start
    ports:
      - 8000:8000
    volumes:
      # The docker socket is shared to allow Docker-in-Docker.
      - "/var/run/docker.sock:/var/run/docker.sock"
      - $PWD:/midori
    depends_on:
      - onos
    privileged: true
    pid: host
    tty: true
    container_name: midori

  # Redis cache and message queue for communication
  # between Midori API and Containernet execution layer.
  redis:
    image: redislabs/redisgraph:2.8.9
    restart: always
    ports:
      - 6379:6379
    container_name: redis

  # Redis admin user interface.
  redisinsight:
    image: redislabs/redisinsight:latest
    ports:
      - 8001:8001
    volumes:
      - ${PWD}/redisinsight_data:/db

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.7
    ports:
      - 2181:2181
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      
  kafka:
    image: docker.io/bitnami/kafka:3.1
    ports:
      - 9092:9092
      - 9093:9093
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://midori:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
